// <auto-generated />
using System;
using BisnesManager.DatabasePersistens.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BisnesManager.DatabasePersistens.Migrations
{
    [DbContext(typeof(BissnesExpertSystemDiplomaContext))]
    [Migration("20250112081911_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.BisnesTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");
                        //.HasDefaultValueSql("nextval('\"Id\"'::regclass)");

                    b.Property<string>("AssignmentsContent")
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character(500)")
                        .IsFixedLength();

                    b.Property<DateOnly>("DateCreate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<short>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");
                       // .HasDefaultValueSql("nextval('\"Tasks_IdStatus_seq\"'::regclass)");

                    b.Property<short>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");
                       // .HasDefaultValueSql("nextval('\"Tasks_IdUser_seq\"'::regclass)");

                    b.Property<int?>("Indentation")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("Tasks_pkey");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdUser");

                    b.ToTable("BisnesTask", (string)null);
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.HolidayPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateCreate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("EndWeekends")
                        .HasColumnType("date");

                    b.Property<short>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("StartWeekends")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("HolidayPlan_pkey");

                    b.HasIndex("IdUser");

                    b.ToTable("HolidayPlan", (string)null);
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.Role", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<DateOnly>("DateCreate")
                        .HasColumnType("date");

                    b.Property<bool>("IsEditWorkTimeTable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEditWorkersRoles")
                        .HasColumnType("boolean");

                    b.Property<string>("Post")
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("Roles_pkey");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateCreate")
                        .HasColumnType("date");

                    b.Property<int>("EffectivCommunication")
                        .HasColumnType("integer");

                    b.Property<int>("HardSkils")
                        .HasColumnType("integer");

                    b.Property<short>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<int>("LevelResponibility")
                        .HasColumnType("integer");

                    b.Property<int>("QualityWork")
                        .HasColumnType("integer");

                    b.Property<int>("SoftSkils")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("Statistic_pkey");

                    b.HasIndex("IdUser");

                    b.ToTable("Statistic", (string)null);
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.Status", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("Statuses_pkey");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.User", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("CheckPhrase")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.Property<DateOnly>("DateCreate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.Property<DateTimeOffset>("EndWorkTime")
                        .HasColumnType("time with time zone");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.Property<short>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .IsFixedLength();

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character(255)")
                        .IsFixedLength();

                    b.Property<byte[]>("PhotoImage")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("StartWorkTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id")
                        .HasName("Users_pkey");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.BisnesTask", b =>
                {
                    b.HasOne("BisnesManager.DatabasePersistens.Model.Status", "IdStatusNavigation")
                        .WithMany("BisnesTasks")
                        .HasForeignKey("IdStatus")
                        .IsRequired()
                        .HasConstraintName("Tasks_IdStatus_fkey");

                    b.HasOne("BisnesManager.DatabasePersistens.Model.User", "IdUserNavigation")
                        .WithMany("BisnesTasks")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("Tasks_IdUser_fkey");

                    b.Navigation("IdStatusNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.HolidayPlan", b =>
                {
                    b.HasOne("BisnesManager.DatabasePersistens.Model.User", "IdUserNavigation")
                        .WithMany("HolidayPlans")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("HolidayPlan_IdUser_fkey");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.Statistic", b =>
                {
                    b.HasOne("BisnesManager.DatabasePersistens.Model.User", "IdUserNavigation")
                        .WithMany("Statistics")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("Statistic_IdUser_fkey");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.User", b =>
                {
                    b.HasOne("BisnesManager.DatabasePersistens.Model.Role", "IdRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("Users_IdRole_fkey");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.Status", b =>
                {
                    b.Navigation("BisnesTasks");
                });

            modelBuilder.Entity("BisnesManager.DatabasePersistens.Model.User", b =>
                {
                    b.Navigation("BisnesTasks");

                    b.Navigation("HolidayPlans");

                    b.Navigation("Statistics");
                });
#pragma warning restore 612, 618
        }
    }
}
